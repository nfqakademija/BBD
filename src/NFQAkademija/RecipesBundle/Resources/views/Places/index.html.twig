{% extends "::base.html.twig" %}

{% block specific_scripts %}
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&libraries=places,geometry&sensor=true"></script>
    <script>
        function key_check(event){}

        function loader(){
            //initialize maps and other stuff related to maps
            getLocation();
            sidebar_manipulation();
            $( window ).resize(function() {
                sidebar_manipulation();
            });

            $(window).bind('resizeEnd', function() {
                refresh_location();
                show_center();
            });

            if(browser == 'firefox'){
                $("#content_wrapper").css('margin-right','-17px');
                $("#search_container").css('box-shadow','none');
            }
            if(browser == 'ie'){
                $("#content_wrapper").css('margin-right','-17px');
            }

            scroll_filters = new IScroll('#filters_zone', {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: true
            });
            hide_loading_screen();

            $("#filters_zone").click(function(){ $("#search_input").blur();});
        }

        //NFQ coordinates will be used if your location is unavailable
        var your_X = 54.903431;
        var your_Y = 23.88197;
        var my_location = new google.maps.LatLng(your_X, your_Y);
        var markersArray = [];
        var infowindow;
        var map;
        var your_position;
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();

        function getLocation(){
            if (navigator.geolocation){
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            }else{
               //Geolocation is not supported by this browser.
                maps_initialize();
            }
        }

        function showPosition(position){
            your_X = position.coords.latitude;
            your_Y = position.coords.longitude;
            my_location = new google.maps.LatLng(your_X, your_Y);
            maps_initialize();
        }

        function showError(error){
            switch(error.code){
                case error.PERMISSION_DENIED:
                    //User denied the request for Geolocation."
                    break;
                case error.POSITION_UNAVAILABLE:
                   //Location information is unavailable."
                    break;
                case error.TIMEOUT:
                    //The request to get user location timed out."
                    break;
                case error.UNKNOWN_ERROR:
                    //An unknown error occurred."
                    break;
            }
            toast('Įvyko klaida nustatant vietą','bad','places')
            maps_initialize();
        }

        function maps_initialize() {
            var map_canvas = document.getElementById('map_canvas');
            var map_options = {
                center: my_location,
                zoom: 16,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                disableDefaultUI: true
            }

            map = new google.maps.Map(map_canvas, map_options);

            your_position = new google.maps.Marker({
                position: my_location,
                map: map,
                icon: "/images/here.png",
                title: "Tu esi čia"
            });

            infowindow = new google.maps.InfoWindow();

            google.maps.event.addListener(your_position, 'click', function () {
                infowindow.setContent("Tu esi čia");
                infowindow.open(map, this);
            });

            directionsDisplay = new google.maps.DirectionsRenderer();
            directionsDisplay.setMap(map);

            add_controllers();
            show_places('custom','all', 2000);
        }

        function add_controllers(){
            //add_center_controller();
        }

        function show_places(operator, type, radius){
            if(operator == "google"){
                //from google API
                //show_on_map('Kebabinė', false);
                //show_on_map('Picerija', false);
                //show_on_map('Palink', false);
                //show_on_map('Maxima', false);
                //show_on_map('greito maisto restoranas', false);
            }else if(operator == "custom"){
                //from local DB
                //traukti is DB vietu lat, long image_url, title ir sukti cikla ir atvaizduoti
                //title, type, lat, long, image_url

                //add_custom_place('Title', 'tipas', '54.909933', '23.983622' , '/images/add.png');

                //kebabinė, picerija(pizza express, pica pica, charlie pica, can can), načnykas, greito maisto, hesburger, mcdonalds,
                //restoranus, kavines, užkandinės, bandelinės, prekybos centrai (Savas, Molas, Urmas, Mega, Akropolis), maxima, norfa, iki, samsonas, fresh market
                //aibė, express market, krautuvės
                var places = get_custom_places(type, radius);

                var title, type, lat, long, icon;
                for(i = 0; i < places.length; i++){
                    title = places[i][0];
                    type = places[i][1];
                    lat = places[i][2];
                    long = places[i][3];
                    icon = places[i][4];
                    add_custom_place(title, type, lat, long , icon);
                }
            }
        }

        function get_custom_places(type, radius){
            var places = [];
            //ajax call to get from type: all
            places[0] = ['Maxima','tipas0','54.909933', '23.983622', '/images/maxima.png'];
            places[1] = ['Norfa','tipas0','54.910833', '23.976841', '/images/norfa.png'];
            places[2] = ['Iki','tipas0','54.907780', '23.983622', '/images/iki.png'];
            places[3] = ['Hesburger','tipas0','54.906690', '23.983640', '/images/hesburger.png'];
            places[4] = ['McDonalds','tipas0','54.907000', '23.983648', '/images/mcdonalds.png'];
            places[5] = ['Rimi','tipas0','54.909933', '23.983670', '/images/rimi.png'];


            //-----------
            var center_lat = your_X;
            var center_long = your_Y;
            var center_location = new google.maps.LatLng(center_lat, center_long);
            var distance;
            var place_location;
            var shownable_places = [];

            //select places to be shown in radius
            for(i = 0; i < places.length; i++){
                place_location = new google.maps.LatLng(places[i][2], places[i][3]);
                distance = google.maps.geometry.spherical.computeDistanceBetween (center_location, place_location);
                distance = distance.toFixed(0);
                if(distance <= radius){
                    shownable_places.push(places[i]);
                }
            }

            return shownable_places;
        }

        function get_nearest_place(title){
            //ajax call to get by title in lower case
            var place = [title, title,'55.909933', '23.983622', '/images/maxima.png'];

            return place;
        }




        function calcRoute(end, type){
            var start = my_location;
            var travel_mode;
            switch(type){
                case "walk": travel_mode = google.maps.TravelMode.WALKING;break;
                case "drive": travel_mode = google.maps.TravelMode.DRIVING;break;
                default: travel_mode = google.maps.TravelMode.DRIVING;break;
            }
            var request = {
                origin:start,
                destination:end,
                travelMode: travel_mode
            };
            directionsService.route(request, function(result, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(result);
                    infowindow.close();
                }
            });
        }

        function initializeMarkers(results, status, pagination){
            if (status == google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                    createMarker(results[i]);
                }
                if (pagination.hasNextPage) {
                    pagination.nextPage();
                }
            }
        }

        function createMarker(place) {
            var placeLocation = place.geometry.location;
            var placeName = place.name;
            var placeReference = place.reference;
            var placePhoto = place.photos;
            if(placePhoto){
                placePhoto = placePhoto[0].getUrl({'maxWidth': 25, 'maxHeight': 25});
            }else{
                placePhoto = place.icon;
            }

            var placeImage = {
                url: place.icon,
                size: new google.maps.Size(25, 25),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(25, 25)
            };

            var marker = new google.maps.Marker({
                position: placeLocation,
                map: map,
                icon: placeImage,
                animation: google.maps.Animation.DROP,
                title: placeName
            });
            markersArray.push(marker);

            google.maps.event.addListener(marker, 'click', function() {
                //this.setAnimation(google.maps.Animation.BOUNCE);
                //var distance = my_location.distanceTo(marker.position);
                var distance = google.maps.geometry.spherical.computeDistanceBetween (my_location, marker.position);
                distance = distanceConverter(distance.toFixed(0));
                var placeContent =
                "<image class='google_map_tooltip_image' src='" + placePhoto + "' />" +
                "<div class='google_map_tooltip_title'>" + placeName + "</div>" +
                "<div style='clear:both;'></div>" +
                "<div id='walk_button' class='google_map_tooltip_button' onclick=\"calcRoute('" + marker.position + "','walk')\">Eiti</div>" +
                "<div id='drive_button' class='google_map_tooltip_button' onclick=\"calcRoute('" + marker.position + "','drive')\">Važiuoti</div>" +
                "<div class='google_map_tooltip_text'>Atstumas ~" + distance + "</div>";

                infowindow.setContent(placeContent);
                infowindow.open(map, this);
            });
        }

        function distanceConverter(distance){
            if (distance < 0){
                distance = 0 + " m";
            }else if (distance < 1000){
                distance = distance + " m";
            }else if (distance >= 1000){
                distance = distance / 1000 + " km";
            }
            return distance;
        }


        function show_on_map(type, delete_index){
            if(delete_index){
                //prevuos markers delete
                for(i = 0; i < markersArray.length; i++){
                    markersArray[i].setMap(null);
                }
                markersArray = [];
            }


            var request = {
                location: my_location,
                rankBy: google.maps.places.RankBy.DISTANCE,
                keyword: type,
                //types: ['bar', 'restaurant', 'cafe', 'grocery_or_supermarket', 'shopping_mall', 'food']
            };

            var service = new google.maps.places.PlacesService(map);
            service.nearbySearch(request, initializeMarkers);
        }


        function add_center_controller(){
            var controller = document.createElement('div');
            controller.id = "map_center_controller";
            controller.index = 1;

            google.maps.event.addDomListener(controller, 'click', function() {
                show_center();
            });

            map.controls[google.maps.ControlPosition.TOP_LEFT].push(controller);
        }


        function show_center(){
            refresh_location();
            map.panTo(my_location);
            if(mobile_state){
                empty_sidebar_slide();
            }
        }

        function show_nearest(title){
            var place_location = "";

            //checks for nearest in created on map in radius
            for (i = 0; i < markersArray.length; i++){
                var marker = markersArray[i];
                var marker_title = marker.title;
                if(marker_title.toLowerCase() == title.toLowerCase()){
                    var marker_location = marker.position;
                    place_location = marker_location;
                    google.maps.event.trigger(marker, 'click');
                    break;
                }
            }

            //if the nearest does not exsist so add it to map
            if(place_location == ""){
                var nearest_place = get_nearest_place(title.toLowerCase());
                add_custom_place(nearest_place[0], nearest_place[1], nearest_place[2], nearest_place[3] , nearest_place[4]);
                place_location = new google.maps.LatLng(nearest_place[2], nearest_place[3]);
                google.maps.event.trigger(markersArray[markersArray.length - 1], 'click');
            }

            map.panTo(place_location);
            if(mobile_state){
                empty_sidebar_slide();
            }
        }

        function refresh_location(){
            if (navigator.geolocation){
                navigator.geolocation.getCurrentPosition(getNewPosition, showError);
            }
        }

        function getNewPosition(position){
            your_X = position.coords.latitude;
            your_Y = position.coords.longitude;
            my_location = new google.maps.LatLng(your_X, your_Y);
            your_position.setPosition(my_location);
        }

        function show_marker(type){
            //show marker when looking for prices. nearest shop with that name pvz IKI
            var marker_location = my_location;
            map.panTo(marker_location);
        }

    function add_custom_place(placeName, placeType, lat, long, placeIcon){
        var placeLocation = new google.maps.LatLng(lat, long);
        var placeImage = {
            url: placeIcon,
            size: new google.maps.Size(25, 25),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(25, 25)
        };

        var marker = new google.maps.Marker({
            position: placeLocation,
            map: map,
            icon: placeImage,
            animation: google.maps.Animation.DROP,
            title: placeName
        });

        markersArray.push(marker);

        google.maps.event.addListener(marker, 'click', function() {
            var distance = google.maps.geometry.spherical.computeDistanceBetween (my_location, marker.position);
            distance = distanceConverter(distance.toFixed(0));
            var placeContent =
                "<image class='google_map_tooltip_image' src='" + placeIcon + "' />" +
                "<div class='google_map_tooltip_title'>" + placeName + "</div>" +
                "<div style='clear:both;'></div>" +
                "<div id='walk_button' class='google_map_tooltip_button' onclick=\"calcRoute('" + marker.position + "','walk')\">Eiti</div>" +
                "<div id='drive_button' class='google_map_tooltip_button' onclick=\"calcRoute('" + marker.position + "','drive')\">Važiuoti</div>" +
                "<div class='google_map_tooltip_text'>Atstumas ~" + distance + "</div>";

            infowindow.setContent(placeContent);
            infowindow.open(map, this);
        });
    }

    </script>
{% endblock %}

{% block title %}Vietos | Foodex{% endblock %}

{% block search_zone %}
    <div id="search_zone" onclick="full_sidebar()">
        <div id='search_index' onclick="focus_input('search_input')" ></div>
        <input id='search_input' placeholder='Ieškoti vietų' onkeyup="search('places')" onfocus="input_focus('places')" onblur="input_blur()"/>
        <div id='search_container'>
            <div id='search_container_inside'></div>
        </div>
    </div>
{% endblock %}

 {% block divider %}
     <div id="divider" class="middle_divider" style="margin-left:10px;margin-top:0px;" onclick="full_sidebar()"></div>
 {% endblock %}

{% block filters_zone %}
<div id='filters_zone' style="top:285px;bottom:10px;">
    <div class="scroller" id="scroller_filters">
       <div class='filter_element untouchable' id='map_button_center' onclick="show_center()"><div class='filter_element_image'></div><div class='filter_element_text'>Tavo vieta</div></div>
       <div class='filter_element untouchable' id='map_button_maxima' onclick="show_nearest('maxima')"><div class='filter_element_image'></div><div class='filter_element_text'>Maxima</div></div>
       <div class='filter_element untouchable' id='map_button_norfa' onclick="show_nearest('norfa')"><div class='filter_element_image'></div><div class='filter_element_text'>Norfa</div></div>
       <div class='filter_element untouchable' id='map_button_iki' onclick="show_nearest('iki')"><div class='filter_element_image'></div><div class='filter_element_text'>Iki</div></div>
       <div class='filter_element untouchable' id='map_button_hesburger' onclick="show_nearest('hesburger')"><div class='filter_element_image'></div><div class='filter_element_text'>Hesburger</div></div>
       <div class='filter_element untouchable' id='map_button_kebab' onclick="show_nearest('kebab')"><div class='filter_element_image'></div><div class='filter_element_text'>Kebabai</div></div>
       <div class='filter_element untouchable' id='map_button_rimi' onclick="show_nearest('rimi')"><div class='filter_element_image' ></div><div class='filter_element_text'>Rimi</div></div>
       <div class='filter_element untouchable' id='map_button_pizza' onclick="show_nearest('pizza')"><div class='filter_element_image'></div><div class='filter_element_text'>Picerija</div></div>
       <div class='filter_element untouchable' id='map_button_mcdonalds' onclick="show_nearest('mcdonalds')"><div class='filter_element_image'></div><div class='filter_element_text'>McDonalds</div></div>
    </div>
</div>

{% endblock %}

{% block config_zone %}{% endblock %}

{% block content %}
    <div id="content_wrapper" style="right:0px;background-color:rgb(229, 227, 223);">
        <div id="map_canvas"></div>
    </div>
{% endblock %}

{% block sidebar_right %}{% endblock %}