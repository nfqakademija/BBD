{% extends "::base.html.twig" %}

{% block specific_scripts %}
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?v=3&libraries=places,geometry&sensor=true"></script>
    <script>
        //NFQ coordinates will be used if your location is unavailable
        var your_X = 54.903431;
        var your_Y = 23.88197;
        var my_location = new google.maps.LatLng(your_X, your_Y);
        var info_window;
        var map;
        var your_position;
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        var geocoder = new google.maps.Geocoder();
        var selected_place = "";
        var places_array = {{ places_array | json_encode | raw }};
        var markers_array = [];
        var current_position = 0;
        var current_place_array = [];

        function key_check(event){}

        function loader(){
            initialize();
            sidebar_manipulation();
            $( window ).resize(function() {
                sidebar_manipulation();
            });

            $(window).bind('resizeEnd', function() {
                show_your_location();
            });

            if(browser == 'firefox'){
                $("#content_wrapper").css('margin-right','-17px');
                $("#search_container").css('box-shadow','none');
            }
            if(browser == 'ie'){
                $("#content_wrapper").css('margin-right','-17px');
            }

            scroll_filters = new IScroll('#filters_zone', {
                scrollbars: true,
                mouseWheel: true,
                interactiveScrollbars: true,
                shrinkScrollbars: 'scale',
                fadeScrollbars: true
            });
            $("#filters_zone").click(function(){ $("#search_input").blur();});
        }

        function initialize(){
            if (navigator.geolocation){
                navigator.geolocation.getCurrentPosition(load_current_position, show_error);
            }else{
               //Geolocation is not supported by this browser.
                load_map();
            }
        }

        function load_current_position(position){
            your_X = position.coords.latitude;
            your_Y = position.coords.longitude;
            my_location = new google.maps.LatLng(your_X, your_Y);
            load_map();
        }

        function show_error(error){
            toast('Įvyko klaida nustatant vietą','bad','places')
            load_map();
        }

        function load_map() {
            var map_canvas = document.getElementById('map_canvas');
            var map_options = {
                center: my_location,
                zoom: 16,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                disableDefaultUI: true
            }

            map = new google.maps.Map(map_canvas, map_options);

            your_position = new google.maps.Marker({
                position: my_location,
                map: map,
                icon: "/images/here.png",
                title: "Tu esi čia"
            });

            info_window = new google.maps.InfoWindow();

            google.maps.event.addListener(your_position, 'click', function () {
                info_window.setContent("Tu esi čia");
                info_window.open(map, this);
            });

            directionsDisplay = new google.maps.DirectionsRenderer();
            directionsDisplay.setMap(map);

            load_markers();
            hide_loading_screen();
        }

        function load_markers(){
            for(i = 0; i < places_array.length; i++){
                var id = places_array[i]["id"];
                var title = places_array[i]["title"];
                var type = places_array[i]["type"];
                var brand = places_array[i]["brand"];
                var lat = places_array[i]["latitude"];
                var long = places_array[i]["longitude"];
                var imageUrl = places_array[i]["imageUrl"];
                create_marker(id, title, brand, type, lat, long, imageUrl);
            }
        }

        function create_marker(id, place_title, brand, type, lat, long, imageUrl){
            var placeLocation = new google.maps.LatLng(lat, long);
            var placeImage = {
                url: imageUrl,
                size: new google.maps.Size(25, 25),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(25, 25)
            };

            var marker = new google.maps.Marker({
                position: placeLocation,
                map: map,
                icon: placeImage,
                animation: google.maps.Animation.DROP,
                title: place_title
            });

            markers_array[id] = marker;

            var street = "";
            geocoder.geocode({'latLng': placeLocation}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        street = results[0].address_components[1].long_name + " " + results[0].address_components[0].short_name;
                    }
                }
            });

            google.maps.event.addListener(marker, 'click', function() {
                var distance = google.maps.geometry.spherical.computeDistanceBetween (my_location, marker.position);
                distance = distance_converter(distance.toFixed(0));
                var placeContent =
                        "<image class='google_map_tooltip_image' src='" + imageUrl + "' />" +
                        "<div class='google_map_tooltip_title'>" + place_title + "</div>" +
                        "<div style='clear:both;'></div>" +
                        "<div class='google_map_tooltip_street'>" + street + "</div>" +
                        "<div style='clear:both;'></div>" +
                        "<div id='walk_button' class='google_map_tooltip_button' onclick=\"show_route('" + marker.position + "','walk')\">Eiti</div>" +
                        "<div id='drive_button' class='google_map_tooltip_button' onclick=\"show_route('" + marker.position + "','drive')\">Važiuoti</div>" +
                        "<div class='google_map_tooltip_text'>Atstumas " + distance + "</div>";
                info_window.setContent(placeContent);
                info_window.open(map, this);
            });
        }

        function show_your_location(){
            refresh_location();
            map.panTo(my_location);
        }

        function refresh_location(){
            if (navigator.geolocation){
                navigator.geolocation.getCurrentPosition(function(position){
                    your_X = position.coords.latitude;
                    your_Y = position.coords.longitude;
                    my_location = new google.maps.LatLng(your_X, your_Y);
                    your_position.setPosition(my_location);
                }, show_error);
            }
        }

        function distance_converter(distance){
            if (distance < 0){
                distance = 0 + " m";
            }else if (distance < 1000){
                distance = distance + " m";
            }else if (distance >= 1000){
                distance = distance / 1000 + " km";
            }
            return distance;
        }

        function show_route(end, type){
            var start = my_location;
            var travel_mode;
            switch(type){
                case "walk": travel_mode = google.maps.TravelMode.WALKING;break;
                case "drive": travel_mode = google.maps.TravelMode.DRIVING;break;
                default: travel_mode = google.maps.TravelMode.DRIVING;break;
            }
            var request = {
                origin:start,
                destination:end,
                travelMode: travel_mode
            };
            directionsService.route(request, function(result, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(result);
                    infowindow.close();
                }
            });
        }

        function select_place(brand, overide){
            overide = overide || false;
            if(selected_place == ""){
                //make place active
                selected_place = brand;
                $("#place_" + brand).addClass('selected');
                show_place_navigation(brand);
            }else if(selected_place == brand && !overide){
                //make selected place unactive
                selected_place = "";
                $("#place_" + brand).removeClass('selected');
                hide_place_navigation();
            }else{
                //make selected place active and other unactive
                selected_place = brand;
                $(".filter_element").removeClass('selected');
                $("#place_" + brand).addClass('selected');
                show_place_navigation(brand);
            }
            $("#search_input").val('');
            input_blur();
        }


        function show_place_navigation(brand){
            loading('place_' + brand + ' .filter_element_image', 'show', '26px 18px');
            current_position = 0;
            current_place_array = [];
            current_place_array = extract_places('brand', brand);
            show_current_place();
            $("#place_navigation").fadeIn(transition_time);
            loading('place_' + brand + ' .filter_element_image', 'hide', '26px 18px');
            if(mobile_state){
                empty_sidebar_slide();
            }
        }

        function hide_place_navigation(){
            $("#place_navigation").fadeOut(transition_time);
            current_position = 0;
            current_place_array = [];

            info_window.close();
            directionsDisplay.setDirections({routes: []});
            show_your_location();
        }

        function extract_places(type, item){
            var places = [];
            for(i = 0; i < places_array.length; i++){
                var type_index = places_array[i][type];
                if(type_index == item){
                    places.push(places_array[i]);
                }
            }
            places = order_places(places);
            return places;
        }

        function order_places(places){
            for(i = 0; i < places.length; i++){

                var place = places[i];
                var place_location = new google.maps.LatLng(place["latitude"], place["longitude"]);
                var distance = google.maps.geometry.spherical.computeDistanceBetween (my_location, place_location);
                distance = distance.toFixed(0);

                for(j = i + 1; j < places.length; j++){
                    var other_place = places[j];
                    var other_place_location = new google.maps.LatLng(other_place["latitude"], other_place["longitude"]);
                    var other_distance = google.maps.geometry.spherical.computeDistanceBetween (my_location, other_place_location);
                    other_distance = other_distance.toFixed(0);

                    if(distance > other_distance){
                        var temporary = places[j];
                        places[j] = places[i]
                        places[i] = temporary;
                    }
                }
            }
            return places;
        }

        function show_current_place(){
            var current_place = current_place_array[current_position];
            var imageUrl = current_place['imageUrl'];
            $("#place_navigation_image").css('background-image',"url('" + imageUrl + "')");
            var place_location = new google.maps.LatLng(current_place['latitude'], current_place['longitude']);
            var distance = google.maps.geometry.spherical.computeDistanceBetween (my_location, place_location);
            distance = distance_converter(distance.toFixed(0));
            $("#place_navigation_distance").html(distance);
            var id = current_place['id'];
            google.maps.event.trigger(markers_array[id], 'click');
            directionsDisplay.setDirections({routes: []});
            map.panTo(place_location);
        }

        function place_go(type){
            var working_position = current_position;
            if(type == "back"){
                working_position--;
            }else{
                working_position++;
            }

            if(working_position < 0){
                working_position = current_place_array.length - 1;
            }else if(working_position > current_place_array.length - 1){
                working_position = 0;
            }

            current_position = working_position;
            show_current_place();
        }

    </script>
{% endblock %}

{% block title %}Vietos | Foodex{% endblock %}

{% block search_zone %}
    <div id="search_zone">
        <div id='search_index' onclick="focus_input('search_input')" ></div>
        <input id='search_input' placeholder='Ieškoti vietų' onkeyup="search('places')" onfocus="input_focus('places')" onblur="input_blur()"/>
        <div id='search_container'>
            <div id='search_container_inside'></div>
        </div>
    </div>
{% endblock %}

 {% block divider %}
     <div id="divider" class="middle_divider" style="margin-left:10px;margin-top:0px;"></div>
 {% endblock %}

{% block filters_zone %}
<div id='filters_zone' style="top:285px;bottom:10px;">
    <div class="scroller" id="scroller_filters">
        <div class='filter_element untouchable' id='place_your_position' onclick="show_your_location()"><div class='filter_element_image' style="background-image:url('/images/center.png')"></div><div class='filter_element_text'>Tavo vieta</div></div>
        {% for place in places %}
        <div class='filter_element untouchable' id="place_{{ place.brand }}" onclick="select_place('{{ place.brand }}')"><div class='filter_element_image' style="background-image:url('{{ place.imageUrl }}')"></div><div class='filter_element_text'>{{ place.title }}</div></div>
        {% endfor %}
    </div>
</div>

{% endblock %}

{% block config_zone %}{% endblock %}

{% block content %}
    <div id="content_wrapper" style="right:0px;background-color:rgb(229, 227, 223);">
        <div id="place_navigation">
            <div id="place_navigation_image"></div>
            <div id="place_navigation_distance"></div>
            <div class="place_navigation_go" onclick="place_go('back')"><</div>
            <div class="place_navigation_go" onclick="place_go('forward')">></div>
        </div>
        <div id="map_canvas"></div>
    </div>
{% endblock %}

{% block sidebar_right %}{% endblock %}